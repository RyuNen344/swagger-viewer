// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GitHubPageHtml swagger 2.0 json tests whole tests extractSrc 1`] = `
"{
  \\"swagger\\": \\"2.0\\",
  \\"info\\": {
    \\"version\\": \\"1.0.0\\",
    \\"title\\": \\"Swagger Petstore\\",
    \\"description\\": \\"A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification\\",
    \\"termsOfService\\": \\"http://swagger.io/terms/\\",
    \\"contact\\": {
      \\"name\\": \\"Swagger API Team\\"
    },
    \\"license\\": {
      \\"name\\": \\"MIT\\"
    }
  },
  \\"host\\": \\"petstore.swagger.io\\",
  \\"basePath\\": \\"/api\\",
  \\"schemes\\": [\\"http\\"],
  \\"consumes\\": [\\"application/json\\"],
  \\"produces\\": [\\"application/json\\"],
  \\"paths\\": {
    \\"/pets\\": {
      \\"get\\": {
        \\"description\\": \\"Returns all pets from the system that the user has access to\\",
        \\"operationId\\": \\"findPets\\",
        \\"produces\\": [
          \\"application/json\\",
          \\"application/xml\\",
          \\"text/xml\\",
          \\"text/html\\"
        ],
        \\"parameters\\": [
          {
            \\"name\\": \\"tags\\",
            \\"in\\": \\"query\\",
            \\"description\\": \\"tags to filter by\\",
            \\"required\\": false,
            \\"type\\": \\"array\\",
            \\"items\\": {
              \\"type\\": \\"string\\"
            },
            \\"collectionFormat\\": \\"csv\\"
          },
          {
            \\"name\\": \\"limit\\",
            \\"in\\": \\"query\\",
            \\"description\\": \\"maximum number of results to return\\",
            \\"required\\": false,
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int32\\"
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"pet response\\",
            \\"schema\\": {
              \\"type\\": \\"array\\",
              \\"items\\": {
                \\"$ref\\": \\"#/definitions/Pet\\"
              }
            }
          },
          \\"default\\": {
            \\"description\\": \\"unexpected error\\",
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/ErrorModel\\"
            }
          }
        }
      },
      \\"post\\": {
        \\"description\\": \\"Creates a new pet in the store.  Duplicates are allowed\\",
        \\"operationId\\": \\"addPet\\",
        \\"produces\\": [\\"application/json\\"],
        \\"parameters\\": [
          {
            \\"name\\": \\"pet\\",
            \\"in\\": \\"body\\",
            \\"description\\": \\"Pet to add to the store\\",
            \\"required\\": true,
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/NewPet\\"
            }
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"pet response\\",
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/Pet\\"
            }
          },
          \\"default\\": {
            \\"description\\": \\"unexpected error\\",
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/ErrorModel\\"
            }
          }
        }
      }
    },
    \\"/pets/{id}\\": {
      \\"get\\": {
        \\"description\\": \\"Returns a user based on a single ID, if the user does not have access to the pet\\",
        \\"operationId\\": \\"findPetById\\",
        \\"produces\\": [
          \\"application/json\\",
          \\"application/xml\\",
          \\"text/xml\\",
          \\"text/html\\"
        ],
        \\"parameters\\": [
          {
            \\"name\\": \\"id\\",
            \\"in\\": \\"path\\",
            \\"description\\": \\"ID of pet to fetch\\",
            \\"required\\": true,
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int64\\"
          }
        ],
        \\"responses\\": {
          \\"200\\": {
            \\"description\\": \\"pet response\\",
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/Pet\\"
            }
          },
          \\"default\\": {
            \\"description\\": \\"unexpected error\\",
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/ErrorModel\\"
            }
          }
        }
      },
      \\"delete\\": {
        \\"description\\": \\"deletes a single pet based on the ID supplied\\",
        \\"operationId\\": \\"deletePet\\",
        \\"parameters\\": [
          {
            \\"name\\": \\"id\\",
            \\"in\\": \\"path\\",
            \\"description\\": \\"ID of pet to delete\\",
            \\"required\\": true,
            \\"type\\": \\"integer\\",
            \\"format\\": \\"int64\\"
          }
        ],
        \\"responses\\": {
          \\"204\\": {
            \\"description\\": \\"pet deleted\\"
          },
          \\"default\\": {
            \\"description\\": \\"unexpected error\\",
            \\"schema\\": {
              \\"$ref\\": \\"#/definitions/ErrorModel\\"
            }
          }
        }
      }
    }
  },
  \\"definitions\\": {
    \\"Pet\\": {
      \\"type\\": \\"object\\",
      \\"allOf\\": [
        {
          \\"$ref\\": \\"#/definitions/NewPet\\"
        },
        {
          \\"required\\": [\\"id\\"],
          \\"properties\\": {
            \\"id\\": {
              \\"type\\": \\"integer\\",
              \\"format\\": \\"int64\\"
            }
          }
        }
      ]
    },
    \\"NewPet\\": {
      \\"type\\": \\"object\\",
      \\"required\\": [\\"name\\"],
      \\"properties\\": {
        \\"name\\": {
          \\"type\\": \\"string\\"
        },
        \\"tag\\": {
          \\"type\\": \\"string\\"
        }
      }
    },
    \\"ErrorModel\\": {
      \\"type\\": \\"object\\",
      \\"required\\": [\\"code\\", \\"message\\"],
      \\"properties\\": {
        \\"code\\": {
          \\"type\\": \\"integer\\",
          \\"format\\": \\"int32\\"
        },
        \\"message\\": {
          \\"type\\": \\"string\\"
        }
      }
    }
  }
}"
`;

exports[`GitHubPageHtml swagger 2.0 yaml tests in Private browsing whole tests extractSrc 1`] = `
"swagger: \\"2.0\\"
info:
  title: Simple API overview
  version: v2
paths:
  /:
    get:
      operationId: listVersionsv2
      summary: List API versions
      produces:
        - application/json
      responses:
        \\"200\\":
          description: |-
            200 300 response
          examples:
            application/json: |-
              {
                  \\"versions\\": [
                      {
                          \\"status\\": \\"CURRENT\\",
                          \\"updated\\": \\"2011-01-21T11:33:21Z\\",
                          \\"id\\": \\"v2.0\\",
                          \\"links\\": [
                              {
                                  \\"href\\": \\"http://127.0.0.1:8774/v2/\\",
                                  \\"rel\\": \\"self\\"
                              }
                          ]
                      },
                      {
                          \\"status\\": \\"EXPERIMENTAL\\",
                          \\"updated\\": \\"2013-07-23T11:33:21Z\\",
                          \\"id\\": \\"v3.0\\",
                          \\"links\\": [
                              {
                                  \\"href\\": \\"http://127.0.0.1:8774/v3/\\",
                                  \\"rel\\": \\"self\\"
                              }
                          ]
                      }
                  ]
              }
        \\"300\\":
          description: |-
            200 300 response
          examples:
            application/json: |-
              {
                  \\"versions\\": [
                      {
                          \\"status\\": \\"CURRENT\\",
                          \\"updated\\": \\"2011-01-21T11:33:21Z\\",
                          \\"id\\": \\"v2.0\\",
                          \\"links\\": [
                              {
                                  \\"href\\": \\"http://127.0.0.1:8774/v2/\\",
                                  \\"rel\\": \\"self\\"
                              }
                          ]
                      },
                      {
                          \\"status\\": \\"EXPERIMENTAL\\",
                          \\"updated\\": \\"2013-07-23T11:33:21Z\\",
                          \\"id\\": \\"v3.0\\",
                          \\"links\\": [
                              {
                                  \\"href\\": \\"http://127.0.0.1:8774/v3/\\",
                                  \\"rel\\": \\"self\\"
                              }
                          ]
                      }
                  ]
              }
  /v2:
    get:
      operationId: getVersionDetailsv2
      summary: Show API version details
      produces:
        - application/json
      responses:
        \\"200\\":
          description: |-
            200 203 response
          examples:
            application/json: |-
              {
                  \\"version\\": {
                      \\"status\\": \\"CURRENT\\",
                      \\"updated\\": \\"2011-01-21T11:33:21Z\\",
                      \\"media-types\\": [
                          {
                              \\"base\\": \\"application/xml\\",
                              \\"type\\": \\"application/vnd.openstack.compute+xml;version=2\\"
                          },
                          {
                              \\"base\\": \\"application/json\\",
                              \\"type\\": \\"application/vnd.openstack.compute+json;version=2\\"
                          }
                      ],
                      \\"id\\": \\"v2.0\\",
                      \\"links\\": [
                          {
                              \\"href\\": \\"http://127.0.0.1:8774/v2/\\",
                              \\"rel\\": \\"self\\"
                          },
                          {
                              \\"href\\": \\"http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf\\",
                              \\"type\\": \\"application/pdf\\",
                              \\"rel\\": \\"describedby\\"
                          },
                          {
                              \\"href\\": \\"http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl\\",
                              \\"type\\": \\"application/vnd.sun.wadl+xml\\",
                              \\"rel\\": \\"describedby\\"
                          },
                          {
                            \\"href\\": \\"http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl\\",
                            \\"type\\": \\"application/vnd.sun.wadl+xml\\",
                            \\"rel\\": \\"describedby\\"
                          }
                      ]
                  }
              }
        \\"203\\":
          description: |-
            200 203 response
          examples:
            application/json: |-
              {
                  \\"version\\": {
                      \\"status\\": \\"CURRENT\\",
                      \\"updated\\": \\"2011-01-21T11:33:21Z\\",
                      \\"media-types\\": [
                          {
                              \\"base\\": \\"application/xml\\",
                              \\"type\\": \\"application/vnd.openstack.compute+xml;version=2\\"
                          },
                          {
                              \\"base\\": \\"application/json\\",
                              \\"type\\": \\"application/vnd.openstack.compute+json;version=2\\"
                          }
                      ],
                      \\"id\\": \\"v2.0\\",
                      \\"links\\": [
                          {
                              \\"href\\": \\"http://23.253.228.211:8774/v2/\\",
                              \\"rel\\": \\"self\\"
                          },
                          {
                              \\"href\\": \\"http://docs.openstack.org/api/openstack-compute/2/os-compute-devguide-2.pdf\\",
                              \\"type\\": \\"application/pdf\\",
                              \\"rel\\": \\"describedby\\"
                          },
                          {
                              \\"href\\": \\"http://docs.openstack.org/api/openstack-compute/2/wadl/os-compute-2.wadl\\",
                              \\"type\\": \\"application/vnd.sun.wadl+xml\\",
                              \\"rel\\": \\"describedby\\"
                          }
                      ]
                  }
              }
consumes:
  - application/json"
`;

exports[`GitHubPageHtml swagger 3.0 yaml tests whole tests extractSrc 1`] = `
"openapi: 3.0.0
info:
  title: Callback Example
  version: 1.0.0
paths:
  /streams:
    post:
      description: subscribes a client to receive out-of-band data
      parameters:
        - name: callbackUrl
          in: query
          required: true
          description: |
            the location where data will be sent.  Must be network accessible
            by the source server
          schema:
            type: string
            format: uri
            example: https://tonys-server.com
      responses:
        \\"201\\":
          description: subscription successfully created
          content:
            application/json:
              schema:
                description: subscription information
                required:
                  - subscriptionId
                properties:
                  subscriptionId:
                    description: this unique identifier allows management of the subscription
                    type: string
                    example: 2531329f-fb09-4ef7-887e-84e648214436
      callbacks:
        # the name \`onData\` is a convenience locator
        onData:
          # when data is sent, it will be sent to the \`callbackUrl\` provided
          # when making the subscription PLUS the suffix \`/data\`
          \\"{$request.query.callbackUrl}/data\\":
            post:
              requestBody:
                description: subscription payload
                content:
                  application/json:
                    schema:
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                        userData:
                          type: string
              responses:
                \\"202\\":
                  description: |
                    Your server implementation should return this HTTP status code
                    if the data was received successfully
                \\"204\\":
                  description: |
                    Your server should return this HTTP status code if no longer interested
                    in further updates"
`;
